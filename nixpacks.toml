providers = ["python"]

[python]
version = "3.11"

[phases.setup]
# Ставим сам Python и системные библиотеки
nixPkgs = [
  "python311",
  "python311Packages.pip",       # pip доступен в системе (не апгрейдим его!)
  "python311Packages.setuptools",
  "python311Packages.wheel",
  "gcc",
  "pkg-config",
  "portaudio",  # оставьте только если у вас в requirements есть pyaudio
  "ffmpeg",
  "openssl"
]

[phases.install]
cmds = [
  # Проверим Python и SSL
  "python3 -V",
  "python3 -c 'import ssl; print(\"SSL OK\", ssl.OPENSSL_VERSION)'",

  # 1) Создаём отдельный venv для проекта
  "python3 -m venv /app/.venv",

  # 2) Гарантируем, что в venv есть pip (в Nix это важно)
  "/app/.venv/bin/python -m ensurepip --upgrade",

  # 3) Уже ВНУТРИ venv обновляем инструменты сборки (это разрешено)
  "/app/.venv/bin/pip install --upgrade pip setuptools wheel",

  # 4) Ставим заранее pyOpenSSL (некоторые пакеты импортят его в setup.py)
  "/app/.venv/bin/pip install --no-cache-dir pyOpenSSL",

  # 5) Ставим зависимости проекта
  "/app/.venv/bin/pip install --no-cache-dir -v -r requirements.txt"
]

# Укажите свой entrypoint; пример — если у вас app.py
[start]
cmd = "/app/.venv/bin/python app.py"
